#+template: Water Resources Research
#+key: wrr
#+default-filename: manuscript.org
#+export_exclude_tags: noexport
#+options: author:nil date:nil ^:{} toc:nil title:nil 
#+property: header-args :results drawer :exports results :eval no-export

#+begin_src emacs-lisp :results silent :exports none
  (with-eval-after-load 'ox-latex 
    (add-to-list 'org-latex-classes
      '("agujournal" "\\documentclass{agujournal}
         [NO-DEFAULT-PACKAGES]
         [PACKAGES]
         [EXTRA]"
         ("\\section{%s}" . "\\section*{%}")
         ("\\subsection{%s}" . "\\subsection*{%s}")                                                                         
         ("\\subsubsection{%s}" . "\\subsubsection*{%}")
         ("\\paragraph{%s}" . "\\paragraph*{%}")                                                                          
         ("\\subparagraph{%s}" . "\\subparagraph*{%s}"))))
  (setq org-latex-hyperref-template "")
(setq org-latex-prefer-user-labels t)
#+end_src

#+latex_class: agujournal
#+latex_class_options: [draft,linenumbers]
#+latex_header: \usepackage{hyperref}
#+latex_header: \usepackage{bm}
#+latex_header: \usepackage{amsmath}
#+latex_header: \journalname{Water Resources Research}

* Preamble                                                           :ignore:
#+begin_export latex
\title{Constraining the assimilation of SWOT observations with hydraulic geometry relations}
\authors{K. M. Andreadis, C. B. Brinkerhoff, C. J. Gleason}
\affiliation{}{Department of Civil and Environmental Engineering, University of Massachusetts, Amherst, Massachusetts, USA}
\correspondingauthor{Konstantinos Andreadis}{kandread@umass.edu}
#+end_export

#+begin_keypoints
\item River discharge can be retrieved from SWOT observations
\item A data-driven approach led to a plausible estimation of prior probability distributions
\item A geomorphological classification helped improve discharge estimates via
the river channel representation
\item Hydraulic geometry constraints improved river discharge estimation
accuracy across all metrics
#+end_keypoints
* Abstract                                                           :ignore:
#+begin_abstract
The Surface Water Ocean Topography (SWOT) satellite mission expected to launch
in 2021 will offer a unique opportunity to map river
discharge at an unprecedented spatial resolution globally from its observations
of water surface elevation, width and slope. Since river discharge will not be
directly observed from SWOT, a number of algorithms have been developed with
varying complexity to estimate discharge from SWOT observables. Outstanding
issues include the lack of accurate prior information and parameter
equifinality. We developed a new data assimilation discharge algorithm that aimed to overcome these
limitations by integrating a data-driven approach to estimate priors with a
model informed by hydraulic geometry relations. A comprehensive synthetic
dataset of 18 rivers was used to evaluate the algorithm and four different
configurations (rectangular channel, generic channel, and geomorphologically
classified channel with and without regularization) aiming at evaluating the impact of progressively adding hydraulic
geometry constraints to the estimation problem. The algorithm with the full set
of constraints outperformed the other configurations with median Nash-Sutcliffe
coefficients of 0.77 compared with -0.46, 0.31 and 0.66 while other error
metrics showed identical performance. Results from this study show the promise
of this hybrid data-driven approach at estimating river discharge from SWOT
observations although a number of enhancements need to be tested to improve the
operational applicability of the algorithm.
#+end_abstract

* Introduction
Water is essential for all ecosystems and civilizations, and better
understanding of global hydrology benefits numerous fields of study. Currently,
the best available tool to understand the water cycle at any place on earth is a
gauging station, where in situ instruments (typically) record water level and
convert this quantity to mass flux/discharge via empirically calibrated
functions. These gauges are well understood and accurate when properly
maintained, but gauge maintenance requires physical site access at considerable
expense. Gauges are therefore declining worldwide as they are defunded or as
sharing their information becomes too politically sensitive
citep:hannah2011,gleason2017. The loss of these primary observations impairs our
ability to tune land surface models, which in turn affects our understanding of
the impacts of climate change, our ability to manage scarce water resources, and our general confidence in the state of the global hydrosphere. Since all models are primarily a function of the quality of their input data, additional primary information is needed to augment gauges and improve hydrologic understanding worldwide.

Remote sensing is gaining attention as a valuable tool as hydrologists attempt
to fill the temporal and spatial gaps in global observation networks
citep:mccabe2017. Early work built on the legacy of gauges, using satellite
observations of width or water surface elevation in exactly the same manner as a
traditional gauge, and this work has continued to the present day
[[citep:ashmore2006,smith2008a,pavelsky2014][e.g.::]]. Moreover,
rating curves could also be built from observations of other quantities from
space (as opposed to width/water surface elevation), and this work too has
continued [[citep:tarpanelli2013,dijk2016,bjerklie2018][e.g.::]]. Both of these
approaches rely on some in situ data to develop their empirical equations for
discharge, and are successful in doing so. However, in truly ungauged regions,
training data must come from outside the basin and thus invoke assumptions of
hydrologic transferability that could be problematic [[citep:coron2012][e.g.::]].

To address this need in ungauged basins and supplement existing in-situ networks
with synoptic measurements, NASA/CNES/CSA/UKSA have been developing the Surface
Water and Ocean Topography (SWOT) mission, designed to provide simultaneous
observations of water  surface elevation (WSE), width, and slope on all global
rivers wider than 100m citep:biancamaria2016a. Many methods designed for estimating
river discharge from SWOT operate under the same basic principle, the so-called
Mass conserved Flow Law Inversion (McFLI). This approach
allows discharge estimation in the absence of any in situ data or
transferability assumptions, and attempts to solve an under-constrained
optimization problem for the discharge needed to produce the hydraulic
conditions observed from remote sensing. A number of algorithms have been
developed that can be considered to follow the mass-conserved flow inversion
approach that range in complexity from Markov Chain Monte Carlo
citep:durand2014, Hamiltonian Monte Carlo citep:hagemann2017, as well as
variational and Kalman Filter data assimilation schemes citep:andreadis2007,biancamaria2011,oubanas2018b.
This approach has also been successfully deployed using optical
citep:gleason2018,feng2019, but SWOT's synoptic
observations should provide the most accurate discharge estimates with
acceptable accuracy for numerous river types citep:pavelsky2014a.

Previous SWOT-based McFLI approaches have shown great promise, but their
implementation and evaluation has shown that there are some issues that could
hinder their accuracy and applicability. Firstly, SWOT-based data assimilation schemes
require a hydraulic model to provide predictions of discharge that can then be
inverted when combined with the SWOT observations. However, these models have
tended to be rather complex and have either significant data requirements or
prodigious computational expense. Furthermore, even the algorithms that do not require
a complex hydraulic model benefit from prior information (e.g. discharge or
river bathymetry) and when that prior is not accurate or unavailable it hampers the
algorithm's performance citep:bonnema2016. Another issue that afflicts such
estimation algorithms is equifinality which simplistically refers to the existence of multiple sets of variables (discharge, bed elevation,
roughness etc.) that can lead to the same flow profile as the one observed making
the estimation problem ill-posed citep:garambois2015.

One way to ameliorate the equifinality issue is to introduce additional
constraints to the optimal estimation problem. At-a-station hydraulic geometry (AHG)
theory has been confirmed both empirically and theoretically citep:gleason2015
and can be independent
from the Manning's equation on which most of the aforementioned algorithms are
based on citep:durand2016. Essentially, AHG emerged from observing that river
flow width, depth and velocity vary linearly (in log-space) with discharge for a
specific river cross section. citet:ferguson1986 first confirmed that these power
laws are coincidental to common channel geometric form, and citet:dingman2007 proposed a simple mathematical model for channel geometry that reliably yields AHG. These relationships can be incorporated in the
estimation scheme of a SWOT discharge algorithm in order to reduce the viable
parameter space for the mass-conserved flow inversion.

We developed a data assimilation algorithm, the SWOT Assimilated DiScharge
(SADS), that utilizes a simplified hydraulic scheme to estimate river discharge
from SWOT satellite observations. In contrast to other data assimilation
techniques that have demonstrated the retrieval of discharge from SWOT-like
observations, SADS uses a hydraulic model with minimal data requirements
making it ideal for application globally, and uses a data-driven approach to derive prior
probability distributions for its parameters. We assessed the performance of
the algorithm within the context of synthetic SWOT observations by
sequentially incorporating hydraulic geometry relations into the estimation of
river discharge.

* Algorithm description
The SADS algorithm operates on the set of SWOT observables, i.e. WSE, width and slope and derives estimates of river discharge and its
associated uncertainty using a data assimilation scheme. The assimilation scheme involves the
"first-guess" estimation of hydraulic variables by combining a forward model and
a set of prior probability distributions before the assimilation of the SWOT
observations. The objective of the algorithm is the estimation of discharge at
each river reach when SWOT observations become available.

** Hydraulic model
The forward model in the assimilation scheme is based on the
Gradually Varied Flow (GVF) equations, which describe the steady-state,
non-uniform flow in river channels with gradual variations in water depth and velocity.
The general form of the GVF equation citep:chow1955 is
#+name: eq:gvf
#+begin_equation
#+latex: \dfrac{dY}{dx} = \dfrac{S_{0} - S_{f}}{1 - Fr^{2}}
#+end_equation
where $Y$ is the average water depth, $x$ is the longitudinal distance, $S_{0}$ is the channel bed slope, $S_{f}$ is the water surface slope, and $Fr$ is the Froude number. The latter is given by
#+name: eq:froude
#+begin_equation
#+latex: Fr = \dfrac{Q}{W Y \sqrt{g Y}}
#+end_equation
and the water surface slope can be calculated from the Manning equation
#+begin_equation
#+latex: S_{f} = \dfrac{n^{2} Q^{2}}{W^{2} Y^{10/3}}
#+end_equation

The integration of the governing equations allows for the calculation of the
longitudinal profiles of the water surface of river flow. Equation [[eq:gvf]] can be
solved using a Runge-Kutta method citep:rackauckas2017 for each satellite
overpass of a river, and generate a water surface elevation profile given
characteristics of the river channel geometry, roughness coefficient, and river
discharge. In order to incorporate AHG theory into the model, channel cross
sections are modeled following citet:dingman2007 with a form that facilitates the association of SWOT observables and hydraulic geometry coefficients.

#+begin_src asymptote :file figures/channel.pdf
size(800,400);
defaultpen(linewidth(2));
defaultpen(fontsize(18pt));
Label Lwb = Label("$W^{\ast}$", position=MidPoint);
Label Lw = Label("$W$", position=MidPoint);
Label Lyb = Label("$Y_{m}^{\ast}$", position=MidPoint);
Label Ly = Label("$Y_{m}$", position=MidPoint);
Label Lx = Label("$x$", position=Relative(0.9), align=2N);
draw((0,0) -- (12,0));
draw(arc((6,5.5), r=5.5, angle1=-160, angle2=-20));
draw((0.8,3.8) -- (11.2,3.8),dashed,ArcArrows(SimpleHead),L=Lwb);
draw((5.5,0) -- (5.5,3.8),dashed,ArcArrows(SimpleHead),L=Lyb);
draw((1.2,2.8) -- (10.8,2.8),blue,ArcArrows(SimpleHead),L=Lw);
draw((6.5,0.05) -- (6.5,2.8),blue,ArcArrows(SimpleHead),L=Ly);
draw((0,0) -- (12,0),ArcArrows(SimpleHead),L=Lx);
#+end_src

#+caption: Simplified schematic of river channel cross-section geometry (adapted from citet:dingman2007).
#+name: fig:channel
[[file:figures/channel.pdf]]

Figure [[fig:channel]] shows a schematic of the cross section geometry, where $W^{\ast}$, $W$, $Y_{m}^{\ast}$, $Y_{m}$ are the bankfull width, water surface width, bankfull depth, and maximum depth respectively. The latter are related to the average width and flow depth:
#+name: eq:dingman1
#+begin_equation
#+latex: Y = \left( \frac{r}{r+1} \right) Y_{m}
#+end_equation
#+name: eq:dingman2
#+begin_equation
#+latex: W = W^{\ast} \left( \frac{Y_{m}}{Y_{m}^{\ast}} \right)^{1/r}
#+end_equation
Hydraulic geometry relations can be incorporated into the SADS GVF model through the relationships between the AHG coefficients and the channel cross-section geometric variables. These relationships are derived by rewriting the AHG relations in terms of the Manning equation and river channel geometry (see citet:dingman2018 for details) and are given by
#+name: eq:ahg1
#+begin_equation
#+latex: W = \alpha Q^{b} = {W^{\ast}}^{5r/3\delta} \left( \frac{Y^{\ast}}{R} \right)^{-5/3\delta} \left(\frac{1}{n} S_{f}^{1/2} \right)^{-1/\delta} Q^{1/\delta}
#+end_equation
#+name: eq:ahg2
#+begin_equation
#+latex: Y = c Q^{f} = {W^{\ast}}^{-r/\delta} \left( \frac{Y^{\ast}}{R} \right)^{1/\delta} \left(\frac{1}{n} S_{f}^{1/2} \right)^{-r/\delta} Q^{r/\delta}
#+end_equation
#+name: eq:ahg3
#+begin_equation
#+latex: U = k Q^{m} = {W^{\ast}}^{-2r/3\delta} \left( \frac{Y^{\ast}}{R} \right)^{2/3\delta} \left( \frac{1}{n} S_{f}^{1/2} \right)^{(1+r)/\delta} Q^{2r/3\delta}
#+end_equation
where $R = (1 + r) / r$ and $\delta = 1 + (5 / 3) r$.

It becomes apparent from Equations [[eq:dingman1]] - [[eq:ahg3]] that the channel geometry
parameter $r$ is very important. The parameter reflects the river channel shape,
with $r=1$ corresponding to a triangular channel and as $r$ increases the channel banks
become steeper and the bottom becomes flatter leading to a rectangular
channel for $r \rightarrow \infty$. There are various methods to estimate $r$
from channel geometry or other measurements citep:moramarco2019 as well as from the AHG coefficients (if they can be
calculated otherwise), but here we treat $r$ as a stochastic variable with an
associated probability distribution.

** Data assimilation scheme
The assimilation algorithm employed in the implementation of SADS presented here
is the Local Ensemble Transform Kalman Filter (LETKF) citep:hunt2007.
The LETKF is a variant of the Ensemble Kalman Filter citep:evensen2003, that
combines a prior probability distribution of state variables (e.g. river
discharge) with direct or indirect observations (in this case, water surface
elevation and width) to generate an optimal estimate (i.e. analysis).
The prior distribution is represented by the model error covariance $\bm{P^{b}}$
that is calculated from a $k\mathrm{-size}$ ensemble of model states (background
ensemble), $\bm{x}_{i}^{b}: i = 1,2,...,k$.
The observations $\bm{d^{o}}$ and their uncertainty can be represented by
mapping the state variables to observation space via $\bm{d}=H(\bm{x})$ and an
error covariance matrix $\bm{R}$ respectively.
The analysis (i.e. posterior) mean can be calculated from
#+name: eq:letkf1
#+begin_equation
#+latex: \overline{\bm{x}}^{a} = \overline{\bm{x}}^{b} + \bm{X^{b}} \bm{\overline{w}^{a}}
#+end_equation
#+name: eq:letkf2
#+begin_equation
#+latex: \bm{\overline{w}^{a}} = \bm{P^{a}} \left(\bm{D}^{b}\right)^{T} \bm{R}^{-1} \left(\bm{d}^{o} - \overline{\bm{d}}^{b}\right)
#+end_equation
#+name: eq:letkf3
#+begin_equation
#+latex: \bm{P}^{a} = \left[ (k-1) \bm{I} + \left(\bm{D}^{b}\right)^{T} \bm{R}^{-1} \bm{D}^{b}\right]^{-1}
#+end_equation
where $\overline{\bm{x}}^{b}$, $\overline{\bm{d}}^{b}$ are the ensemble mean and $\bm{X}^{b}$, $\bm{D}^{b}$ are the ensemble deviations from the mean for the model state and model-predicted observations respectively. The $\bm{W}^{a}$ can be used to calculate the analysis ensemble deviations, which can then be used to reconstruct the entire analysis ensemble, with
#+name: eq:letkf4
#+begin_equation
#+latex: \bm{W}^{a} = \left[ (k-1) \bm{P}^{a} \right]^{1/2}
#+end_equation
#+name: eq:letkf5
#+begin_equation
#+latex: \bm{X}^{a} = \bm{X}^{b} \bm{W}^{a}
#+end_equation
The LETKF explicitly supports localization by applying Equations [[eq:letkf1]]-[[eq:letkf5]] for local patches of the model domain using a subset of observations for each. In the case of the SADS algorithm, the model domain consists of a river network with each river being partitioned into reaches and each reach being partitioned into cross sections. Therefore the state vector is formed with river discharge at each river reach, while the truncated (i.e. local) observation vector consists of the nearest observations in terms of along-channel flow distance citep:garcia-pintado2015. The observation vector comprises of the SWOT observations at the cross section locations, and although the default variable in this study was water surface elevation it can optionally include width and slope as well.

The estimation of river discharge from observations such as the ones that SWOT
will provide can be difficult when bed elevation and/or roughness are unknown
due to the equifinality issue citep:oubanas2018a. One approach that can aid
in the solution of such problems is regularization [[citep:budd2011][e.g.::]],
wherein additional constraints are introduced in the form of penalty terms
similar to the observation difference $d^{o} - \overline{d}^{b}$. In the case
of river discharge estimation, the additional constraints can be derived from
the at-a-station hydraulic geometry relations (Equations [[eq:ahg1]] - [[eq:ahg3]]). In
particular, it can be shown that assimilating "observations" of the form $W -
\alpha Q^{b} = 0$ for example is equivalent to a Tikhonov regularization
citep:johns2008 prior to assimilating the actual observations.

** Derivation of priors
Ensemble assimilation methods require the definition of a prior probability
distribution from which to generate the ensemble of background variables
citep:evensen2004. Given that our discharge estimation algorithm needs to be
applicable globally, it has to operate on the assumption of minimal prior
knowledge about river discharge as well as the inputs to the GVF model.
Therefore the algorithm starts with uninformative priors but uses the
observations in a data-driven approach to estimate the necessary prior
probability distributions. The inputs to the GVF model that are not directly
observed include discharge, bed elevation (as
well as bed slope), roughness coefficient, and the channel shape parameter $r$.

We adapted a rejection sampling approach to derive appropriate prior
distributions for the aforementioned variables. Rejection sampling is a simple
technique used to generate samples from a target distribution $T$ using a proposal
distribution $P$. Instead of directly sampling from $T$, the method generates
samples from $P$ and accepts/rejects each of those samples according to
likelihood ratio $\dfrac{t(x)}{L p(x)}$ where $L$ is a constant ($L > 1$), and
$t(x)$, $p(x)$ are the density functions of $T$ and $P$ respectively
citep:martino2018. In our case, the target distribution is the prior
distribution of the unobserved variable (e.g. bed elevation) and the proposal
distribution is an uninformative prior. Since the density function of the target
distribution is unknown, we use the GVF model as a functional to transform both
densities $t(x)$ and $p(x)$ to correspond to density functions of water surface
elevation instead of the target variable. The probability density function of
WSE can be estimated from the observations, thus allowing us to calculate the
likelihood ratio and accept/reject the proposed target-variable value for its
prior distribution.

Figure [[fig:rejection]] shows an example of the adapted rejection sampling approach
for estimating the prior distribution of bed elevation. The algorithm starts
with an uninformative prior as the proposal distribution, from which a set of
bed elevation values are sampled (Figure [[fig:rejection]]a). The uninformative priors are set as uniform
distributions with the bounds for each unobserved variable described in Table
[[tab:bounds]]. Each of the sampled bed elevation values are used as inputs to the
GVF model to simulate an ensemble of WSE values, with each value in that
ensemble corresponding to a bed elevation value. Using kernel density estimators
for the PDFs of the observed and model WSE, the likelihood ratio defined above
can be calculated and each ensemble value pair can be accepted or rejected
(Figure [[fig:rejection]]b).
Subsequently a new distribution can be calculated from the accepted samples of
bed elevation, forming the prior to be used in the assimilation.

#+name: tab:bounds
#+caption: Distribution type and parameters for the uninformative priors used in the rejection sampling approach.
| *Variable*          | *Distribution* | *Parameters*                                |
|---------------------+----------------+---------------------------------------------|
| Bed elevation       | Uniform        | [$H_{min}-20$, $H_{min}$]                   |
| Discharge           | Uniform        | [$Q_{mean}/10$, $Q_{mean}*10$]              |
| Roughness           | Uniform        | [0.01, 0.07]                                |
| Shape parameter $r$ | Estimated      | See section [[Geomorphological classification]] |
|---------------------+----------------+---------------------------------------------|

#+begin_src python :results none
  import h5py
  import numpy as np
  import matplotlib.pyplot as plt
  import seaborn as sns
  import statsmodels.api as sm
  f = h5py.File("priors.h5", 'r')
  zd = f['priors']['zd'][:]
  acc = f['priors']['accepted'][:].astype('bool')
  obs = f['priors']['obs'][:]
  h = f['priors']['h'][:]
  km = sm.nonparametric.KDEUnivariate(h)
  km.fit()
  k = sm.nonparametric.KDEUnivariate(zd)
  k.fit()
  ko = sm.nonparametric.KDEUnivariate(obs)
  ko.fit()
  cls = sns.color_palette("Set2")
  fig, ax = plt.subplots(1, 2, figsize=(9.3, 5.8))
  ax1, ax2 = ax
  ax1.plot(zd[acc], np.random.rand(len(zd[acc]))*k.evaluate(zd[acc]), '.', label="Accept", color=cls[0])
  ax1.plot(zd[~acc], np.random.rand(len(zd[~acc]))*k.evaluate(zd[~acc]), '.', label="Reject", color=cls[1])
  ax1.plot(np.arange(3, 15, 0.01), k.evaluate(np.arange(3, 15, 0.01)), color=cls[7], linewidth=3, label="Proposal")
  ax1.legend(bbox_to_anchor=(1.05, -0.2), ncol=3, borderaxespad=0.)
  ax1.set_xlabel("Bed Elevation (m)")
  ax1.set_ylabel("Probability Density")
  ax1.text(14, 0.12, "(a)")
  ax1.set_ylim(0.0, 0.14)
  ax2.plot(h[acc], np.random.rand(len(h[acc]))*km.evaluate(h[acc]), '.', label="Accept", color=cls[0])
  ax2.plot(h[~acc], np.random.rand(len(h[~acc]))*km.evaluate(h[~acc]), '.', label="Reject", color=cls[1])
  ax2.plot(np.arange(22, 37, 0.01), km.evaluate(np.arange(22, 37, 0.01)), color=cls[7], linewidth=3, label="Model")
  ax2.plot(np.arange(22, 37, 0.01), ko.evaluate(np.arange(22, 37, 0.01)), color=cls[2], linewidth=3, label="Observed")
  ax2.legend(bbox_to_anchor=(0.85, -0.2), ncol=2, borderaxespad=0.)
  ax2.set_xlabel("Water Surface Elevation (m)")
  ax2.set_ylabel("Probability Density")
  ax2.text(33, 0.25, "(b)")
  fig.savefig("figures/rejection_sampling.pdf")
#+end_src
#+caption: (a) Proposal PDF for downstream bed elevation and sampled points (showing both the subsequently rejected and accepted). (b) Estimated PDF (Model) from stochastic model simulation of upstream water surface elevation with bed elevation sampled from proposal PDF. Accepted/rejected water surface elevation points did/didn't fall under the PDF derived from observations (Observed), with each point corresponding to a bed elevation sample.
#+name: fig:rejection
[[file:figures/rejection_sampling.pdf]]

Commonly used rejection sampling methods may suffer from low
acceptability rates making them inefficient when used to
estimate posterior distributions citep:vrugt2018. In the case of the SADS
algorithm we use such methods to identify the prior distribution where the
parameter space can be relatively large as long as it contains behavioral solutions for
the particular river. Moreover, the GVF model is simple enough to make the
generation of large populations to sample from computationally efficient.
Following previous studies that evaluated the performance of SWOT discharge
algorithms, we chose to only use a mean annual flow ($Q_{mean}$) estimated from
a global water balance model as a prior estimation of mean flow citep:durand2016 for the purposes of consistency. In cases where additional information on river discharge or bed elevation is available, it can be used to theoretically improve the performance of the SADS algorithm.

* Geomorphological classification
The at-a-station hydraulic geometry relations that were implicitly incorporated
into the GVF model via the derivations of citet:dingman2007 depend on the
specification of the shape parameter $r$. In the absence of simultaneous data on
discharge and width/depth, the estimation of $r$ becomes difficult and therefore
the approach of treating it stochastically within the SADS assimilation
algorithm becomes necessary. Nonetheless, an approach that would constrain the
probable values of $r$ for each river would theoretically improve the accuracy
of the discharge estimation.

We developed a two-pronged approach to constrain the $r$ parameter
with the first part of the approach involving a global predictive
model for $r$ using SWOT-observable variables as predictors, while the second component
pertaining to a supervised expert classification framework from river
planform geometry. Both the estimation and classification were trained on empirically derived $r$ values
from HYDRoSWOT citep:canova2016, a collection of over 200,000 USGS field
hydraulic measurements (originally made for calibrating rating curves for USGS
gages) across the continental US and Alaska. Observed $r$ values equate to $f/b$, where $f$ and $b$ are the exponents of depth and width
at-a-station hydraulic geometry relationships, respectively, fit at each
cross section. Stations with physically impossible AHG results, such as $f < 0$ or $f > 1$ were filtered out, as were stations with less than 20 measurements.

The unsupervised predictive model uses a random forest algorithm to derive
predicted $r$ values from river widths, bankfull widths, and water surface
elevations: all observable by SWOT. A large number (500) of random regression
trees were run, with one variable randomly sampled at each split. Using
HYDRoSWOT data, WSE was defined as the sum of mean depth and
datum height at-a-station, and bankfull width was defined as the maximum width
of a given station's inter-quartile range of width measurements. This model
successfully explains 96% of variance in the dataset's $r$ values and was
successfully validated on an independent set of the data ($R^{2}=0.98$,
RMSE=0.23). Note that the model predicts a range of $r$ values at-a-station,
despite our definition of $r$ as constant at-a-station.
This is a function of there being a range of predictor variables yet a single
$r$ at each station, but in the case of the SADS algorithm it allows us to
construct distributions of potential $r$ mean values for a given cross section.

#+caption: Classes of river planform geometry defined by the expert classification algorithm.
#+name: fig:rivers
[[file:figures/riv_schematic.pdf]]

The supervised expert classification scheme relies on assessing river
planform geometry and making an informed decision of reach geomorphology (Figure
[[fig:rivers]]). First,
$r$ was conceptually mapped onto classic river classification frameworks
citep:church2006,rosgen1994,schumm1985. Given the hydraulic definition of $r$,
highly stable and meandering to straight rivers should exhibit large $r$ values,
while unstable and frequently avulsing multi-threaded systems will exhibit low
$r$ values as they move more rapidly in vertical space than horizontal (as
meandering systems do). HYDRoSWOT empirical $r$ values were qualitatively
assessed to determine class thresholds. It was noted that sinuous single
channels generally had $r$ values between 1 and 10, straight "canal"-like
channels had values over 10, and $r$ values below 1 resembled both braided channels
and ostensibly wide, shallow channels near dams (verified visually in Google
Earth). It was decided that for the purposes of this algorithm, $r$ values below 1
corresponded to just braided reaches. The distinction between anastomosing and
braiding is inherently subjective, though in keeping with the nomenclature of
citet:durand2016, these multi-threaded systems are simply referred to as
braided. Class thresholds were finally set according to these observations and
then compared against the frequency distribution of HYDRoSWOT $r$ values as a
qualitative check. The expert framework's class bounds approximate the following
bins: 0-50th percentile, 50-75th percentile, 75th to outlier threshold, and the
outliers. Within SADS the bounds for each river class were used to truncate the
probability distribution of the $r$ parameter, with the mean and variance of that
distribution (assumed to be Gaussian) derived from the unsupervised predictive model. Table
[[tab:rivers]] show the class of each river from the 18 case studies using the
geomorphological classification framework, along with the bounds for the $r$ parameter
for each class.

#+name: rivers
#+BEGIN_SRC python :var cls="Straight/Canal Reach" :output value table
import h5py
classes = """more sinuous single-channel reach
braided
somewhat sinuous single-channel reach
somewhat sinuous single-channel reach
somewhat sinuous single-channel reach
somewhat sinuous single-channel reach
more sinuous single-channel reach
somewhat sinuous single-channel reach
braided
somewhat sinuous single-channel reach
more sinuous single-channel reach
somewhat sinuous single-channel reach
more sinuous single-channel reach
somewhat sinuous single-channel reach
Straight/Canal reach
Straight/Canal reach
braided
more sinuous single-channel reach"""
classes = [s.strip().title() for s in classes.split("\n")]
f = h5py.File("/Users/kandread/sads.h5")
rivers = {c: [] for c in classes}
for i, k in enumerate(f):
    rivers[classes[i]].append(k)
f = None
return ", ".join(rivers[cls])
#+END_SRC

#+name: tab:rivers
#+caption: Classification of each river from the 18 case studies using the geomorphological framework.
#+ATTR_LATEX: :environment tabular :align p{0.3\textwidth} p{0.5\textwidth}  c
| *Classification*                      | *Rivers*                                                                                                 |            |
|---------------------------------------+----------------------------------------------------------------------------------------------------------+------------|
| Somewhat Sinuous Single-Channel Reach | GaronneDownstream, GaronneUpstream, Kanawha, MississippiDownstream, Ohio, Po, SacramentoUpstream, Severn | 1 < r < 5  |
| More Sinuous Single-Channel Reach     | Cumberland, MississippiUpstream, SacramentoDownstream, Seine, Wabash                                     | 5 < r < 10 |
| Straight/Canal Reach                  | StLawrenceDownstream, StLawrenceUpstream                                                                 | r > 10     |
| Braided                               | Ganges, Platte, Tanana                                                                                   | r < 1      |
|---------------------------------------+----------------------------------------------------------------------------------------------------------+------------|
#+TBLFM: $2='(org-sbe "rivers" (cls $$1))

* Experimental design
We performed four sets of experiments, each one intended to evaluate the impact
of hydraulic geometry constraints and formulations on the assimilation of SWOT
satellite observations. In each experiment, different configurations of the SADS
algorithm were implemented and evaluated in terms of river discharge estimation.
These experiments included: 1) the simplified assumption of rectangular river
channel cross sections; 2) using channel cross sections with an empirical but
generic $r$ parameter; 3) deriving the $r$ parameter utilizing our
geomorphological classification scheme; 4) the inclusion of Equations [[eq:ahg1]] -
[[eq:ahg3]] as observational constraints in the assimilation.

We used the dataset from citet:durand2016, which includes the output from
hydrodynamic model simulations of 18 rivers, to evaluate the different
configurations of the SADS algorithm. Synthetic SWOT observations were generated
from the output of the hydrodynamic simulations that included daily values of
spatially-variable (i.e. longitudinal profiles) water surface elevation, slope,
and top width corresponding to different flows. These data were simulated after forcing the different models with a prescribed channel bathymetry, model-derived or observed inflows and water elevation as upstream and downstream boundary conditions respectively. Validation results of these models showed that they realistically reproduced water surface elevation and inundation extent [[citep:jung2012][e.g.::]], making them appropriate for the purpose of studies evaluating river discharge from SWOT-like satellite observations. The synthetic SWOT observations were derived by adding zero-mean Gaussian errors (temporally uncorrelated) to the observables with standard deviations of 5 cm, 5 m, and 0.1 cm/km for water surface elevation, width, and slope respectively.
Prior probability distributions were estimated for discharge, bed elevation,
channel roughness and geometry parameter ($r$) using the SWOT synthetic
observations and methods described in sections [[Derivation of priors]] and [[Geomorphological classification]]. Other inputs to the GVF model
included the bankfull width and depth which were calculated as the maximum
observed surface water width and elevation respectively after subtracting the
assumed bed elevation (derived from the prior PDF that is estimated) for the latter.

The performance of the different configuration of the SADS algorithm were
evaluated with five metrics including relative root mean squared error (RRMSE),
normalized root mean squared error (NRMSE), relative bias (rBias), Kling-Gupta
efficiency (KGE) and Nash-Sutcliffe efficiency (NSE). RRMSE, given by
$\sqrt{\dfrac{1}{N}\sum\limits_{i=1}^{N}{\left( \dfrac{Q_{i} - \hat{Q_{i}}}{Q_{i}}
\right)^{2}}}$, NRMSE, given by $\sqrt{\dfrac{1}{N}\sum\limits_{i=1}^{N}{\left(
\dfrac{Q_{i} - \hat{Q_{i}}}{\overline{Q}} \right)^{2}}}$, and rBias, given by
$\dfrac{1}{N}\sum\limits_{i=1}^{N}{\left( \dfrac{Q_{i} - \hat{Q_{i}}}{Q_{i}}
\right)}$, can help characterize the deviation and mean of the model residuals
and despite their shortcomings [[citep:ehret2011][e.g.::]] have been some of the
most widely used error metrics citep:dawson2007. NSE, given by $1 -
\sum\limits_{i=1}^{N}{\left(Q_{i} - \hat{Q_{i}}\right)^{2}} \big/
\sum\limits_{i=1}^{N}{\left(Q_{i} - \overline{Q}\right)^{2}}$ is another widely
used goodness-of-fit metric that quantifies the portion of the observed variance
explained by the model. Finally, the KGE presents an interesting decomposition
of the NSE that facilitates the analysis of different components of the
hydrologic signal and is given by $1-\sqrt{(\rho - 1)^{2} + \left(
\dfrac{\mu_{Q}}{\hat{\mu_{Q}}} - 1 \right)^{2} + \left(
\dfrac{\sigma_{Q}}{\hat{\sigma_{Q}}} - 1\right)^{2}}$ where $\rho$ is the
Pearson correlation between observations and model predictions, $\mu_{Q}$ and
$\sigma_{Q}$ are the mean and standard deviation of the observations, and $\hat{\mu_{Q}}$ and
$\hat{\sigma_{Q}}$ are the mean and standard deviation of the model predictions citep:gupta2009a.

* Results

** Prior distributions
Given the importance of prior information on the performance of any Bayesian
schemes citep:hagemann2017, it is worthwhile examining whether the method of
deriving the prior PDFs that is part of the SADS algorithm can reproduce the observed distribution of river
discharge. Note that this prior PDF derivation method is part of all four
configurations of the SADS algorithm implemented and evaluated in our study. Apart from visually comparing the two distributions, we can
quantitatively assess their similarity using an $f\mathrm{-divergence}$ metric. Here we choose the Hellinger distance that is bounded between 0 and 1 and can be considered the probabilistic
equivalent of the commonly used Euclidean distance citep:cam2000. The Hellinger
distance between two probability distributions with densities $f(x)$ and $g(x)$
can be expressed as $H^{2} = 1 - \int{\sqrt{f(x) g(x)} dx}$. If we assume that
the two probability distributions are lognormal, a good approximation in the case of river
discharge, $H$ can be practically calculated from
#+begin_equation
#+name: eq:hellinger
#+latex: H^{2} = 1 - \sqrt{\frac{2 \sigma_{1} \sigma_{2}}{\sigma_{1}^{2} + \sigma_{2}^{2}}} exp \left[- \frac{(\mu_{1} - \mu_{2})^{2}}{4 (\sigma_{1}^{2} + \sigma_{2}^{2})} \right]
#+end_equation
where $\mu$ and $\sigma$ are the means and standard deviations of the two
log-transformed distributions.

#+begin_src python :results none
import h5py
import seaborn as sns
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
def loghellinger(q1, q2):
     m1 = np.mean(np.log(q1))
     m2 = np.mean(np.log(q2))
     s1 = np.std(np.log(q1))
     s2 = np.std(np.log(q2))
     return 1.0 - np.sqrt(2*s1*s2/(s1**2+s2**2))*np.exp(-(m1-m2)**2/(4*(s1**2+s2**2)))
sns.set_palette("Set2")
f = h5py.File("prior_dists.h5")
h = np.zeros(len(f.keys()))
for i, k in enumerate(f):
     q1 = f[k]['Q'][:]
     q2 = f[k]['Qum'][:]
     h[i] = loghellinger(q1, q2)
data = {'Discharge': [], 'River': [], 'Simulation': []}
for k in f:
    n = len(f[k]['Q'][:])
    data['Discharge'].extend(f[k]['Q'][:])
    data['Discharge'].extend(f[k]['Qum'][:])
    data['Simulation'].extend(['Truth']*n)
    data['Simulation'].extend(['SADS']*n)
    data['River'].extend([k.replace(".nc", "")]*2*n)
data = pd.DataFrame(data)
fig, (ax1, ax2) = plt.subplots(1, 2, gridspec_kw={'width_ratios': [6, 1]})
sns.violinplot(data=data,y='River', x='Discharge', hue='Simulation', sym='', linewidth=0, ax=ax1)
ax1.legend().set_title("")
ax2.set_yticks([])
ax2.barh(range(18), h, color='grey')
ax2.set_ylim([-0.5, 17.5])
fig.tight_layout()
plt.subplots_adjust(wspace=0.05)
ax2.set_xlabel("$H^{2}$")
plt.savefig("sads_priors.pdf", pad_inches=0)
#+end_src
#+caption: Empirical and estimated prior distributions of river discharge (normalized by each river's Truth maximum values for display purposes) for each river case study. Also shown is the Hellinger distance metric between the two distributions of each river (smaller values indicate higher degree of similarity).
#+name: fig:priors
[[file:figures/sads_priors.pdf]]

Figure [[fig:priors]] shows the comparison of the empirical PDF, derived
from the "true" discharge, and the estimated prior PDF used in the SADS
assimilation algorithm. The comparison is shown in the form of a set of violin
plots that correspond to the probability densities grouped for each river. The
discharge values have been normalized by each river's "true" maximum value in
order to display the PDFs of all the case studies. With the exception of the
Upstream Sacramento River, SADS appears to reproduce the range of the prior
distribution of discharge. The mode and shape, including dispersion and skewness, were
captured well in the cases of the Ganges, Upstream Garonne, Ohio, Po, Severn,
and Wabash Rivers. On the other hand, the priors for the rest of the case
studies were not able to reproduce some of the properties of the observed distribution
as well potentially affecting the efficacy of the data assimilation algorithm.

Nonetheless, results from the SADS prior PDF estimation resulted in a better
constraint for the subsequent assimilation.
The similarity between the estimated prior distribution and the corresponding
truth is confirmed in Figure [[fig:priors]] that also shows the Hellinger
distance metric for each river apart from the direct PDF comparison.
 The computed Hellinger distances ranged from 0.002 (Po River) to 0.209 (Platte River) and a median
value of 0.031 suggesting that the SWOT observations and the rejection sampling method led to an informative prior.

** Rectangular channel
Discharge estimation approaches from remote sensing observations that employ
hydraulic models globally utilize the assumption of a rectangular channel in the
absence of other data [[citep:yoon2012][e.g.::]]. Therefore, the first
experiment we performed involved the same approximation for the channel cross
sections, i.e. setting $r$ to a very high value (1e6), in the GVF model.
From the geomorphological classification, most of the rivers do not appear to
be well represented with a rectangular channel. Nonetheless, the SWOT
observations could contain adequate information to compensate for the
uncertainty in the forward model. Figure [[fig:rect]] shows hydrographs of the
SADS-estimated discharge when using the rectangular channel approximation
compared to the true discharge for each river case study. In some cases the
assimilation is able to reproduce discharge with reasonable accuracy despite the
simplicity in channel geometry. In particular, the Cumberland and the Seine
showed relatively high efficiencies with NSE of 0.69 and bias of -16%. The
St Lawrence Upstream and Mississippi River reaches also showed relatively good performance with RMSEs between 24.3
and 41.3%. For the rest of the cases, the performance of SADS with a rectangular
channel ranged from capturing the temporal variability with some bias (e.g. the
Po, Severn and Sacramento) to completely missing the discharge dynamics (e.g.
the downstream Garonne and St Lawrence Rivers). The largest relative bias in the
rectangular channel estimates are found for the Tanana, Wabash, Severn, upstream
Sacramento, and Ganges with values ranging from -224% to -604%. Overall, only
6/18 rivers had a positive NSE ranging from 0.12 to 0.69, 12/18 had a positive
KGE ranging from 0.06 to 0.76, and 5/18 had NRMSE or RRMSE below 50% ranging from
19% to 48%. The rivers with the worst negative NSEs were the Wabash (-31.7), the
upstream Sacramento (-26.1), the Tanana (-24.4), and the downstream St Lawrence
(-213.8). Interestingly, the Tanana had a positive KGE value which was reflected
on the RMSEs that were better than the other "worst-NSEs" rivers (73% versus
157% to 376% in terms of NRMSE). The median values for the error metrics were
0.11 for the KGE, -0.46 for the NSE, 75% for the NRMSE, 97% for the RRMSE, and
-83% for the relative bias. The relatively poor results suggest the
inappropriateness of the rectangular channel approximation, although the
algorithm might be successfully compensating for that in some cases by
estimating an effective bed elevation and channel roughness.


#+begin_src python :results none
  import string
  import h5py
  import seaborn as sns
  import pandas as pd
  import numpy as np
  import matplotlib.pyplot as plt
  sns.set(context="paper", palette="Set2", style="white", font_scale=2, rc={'figure.figsize': (14, 8.8)})
  f = h5py.File("sads.h5")
  data = {'Discharge': [], 'Simulation': [], 'River': [], 'Time': []}
  for k in f:
      n = len(f[k]['Obs'][0, :])
      data['Time'].extend(list(range(n))*2)
      data['Discharge'].extend(f[k]['Obs'][0, :])
      data['Discharge'].extend(f[k]['Rect'][:].mean(axis=1))
      data['Simulation'].extend(['Truth']*n)
      data['Simulation'].extend(['SADS']*n)
      data['River'].extend([k]*2*n)
  data = pd.DataFrame(data)
  g = sns.FacetGrid(data, col="River", hue="Simulation", col_wrap=3, sharex=False, sharey=False, aspect=2)
  g.map(plt.plot, "Time", "Discharge")#.add_legend(title="")
  axes = g.axes.flatten()
  letters = string.ascii_lowercase[:18]
  for i, ax in enumerate(axes):
      ax.set_title(ax.get_title().replace("River =", "{}.".format(letters[i])))
  f = None
  axes[0].set_ylabel("Discharge ($m^{3}/s$)")
  axes[3].set_ylabel("Discharge ($m^{3}/s$)")
  axes[6].set_ylabel("Discharge ($m^{3}/s$)")
  axes[9].set_ylabel("Discharge ($m^{3}/s$)")
  axes[12].set_ylabel("Discharge ($m^{3}/s$)")
  axes[15].set_ylabel("Discharge ($m^{3}/s$)")
  axes[16].legend(bbox_to_anchor=(0.8, -0.4), ncol=2, borderaxespad=0., frameon=False, fontsize=20)
  plt.savefig("sads_rectangular.pdf", pad_inches=0)
#+end_src
#+name: fig:rect
#+caption: Hydrographs from the SADS algorithm when assuming a rectangular cross section compared to true discharge for each of the 18 case study rivers.
#+begin_figure
#+attr_latex: :width \textwidth
[[file:figures/sads_rectangular.pdf]]
#+end_figure

** AHG channel
In order to improve on the river channel representation in the GVF forward
model, we used the HYDRoSWOT dataset to estimate a more realistic $r$ shape parameter. The second experiment that we performed derived a distribution of $r$
from the entire HYDRoSWOT dataset, thus ignoring any information on the
classification of each river. From the histogram of the data, it was apparent
that a log-normal distribution could be fit and the resulting parameters were
$\mu=0.95$ and $\sigma=1.02$ for the prior probability distribution of $r$.
Figure [[fig:sads_r]] shows time series of the SADS-estimated discharge when using a
river channel with an $r$ parameter sampled from the aforementioned generic
log-normal distribution, along with the true hydrographs.

The generic $r$ parameter improves the discharge estimation accuracy for 13/18
rivers with the exceptions being the Cumberland, Platte, downstream Sacramento,
Tanana, and upstream St Lawrence. For the cases where there was improvement, the
median KGE increased from 0.06 to 0.33, the NSE from -0.42 to 0.51, and the
NRMSE/RRMSE decreased from 85 and 107% to 43 and 71% respectively. In contrast,
the performance metrics worsened for the five other rivers with KGE decreasing
from 0.31 to -0.06, NSE from -1.02 to -1.54, and RRMSE increasing from 73 to 80%
in terms of median values. Somewhat surprisingly, the NRMSE actually decreased
for the 5 rivers with worse performance (66 to 57%). In the case of the
Cumberland, it appears that the generic $r$ configuration of SADS does not
perform during the first half of the simulation period when river slope was
steeper than about 0.1 cm/km citep:durand2016. Moreover, this configuration of
the algorithm does not estimate the flow peaks for the downstream Sacramento
while also losing the some or all of the dynamics information for the Platte and
upstream St Lawrence. On the other hand, the volume errors appear to be reduced when a
generic $r$ parameter is introduced. For example, the Severn NRMSE is reduced
from 158% to 92% while the corresponding numbers for the downstream St Lawrence
were 157% and 36% respectively. Overall, this alternative approximation for the
channel geometry led to an overall improvement with the median relative bias
decreasing to -39%, NRMSE/RRMSE decreasing to 49/77%, and
NSE and KGE increasing to 0.31 and 0.33 respectively.

#+BEGIN_SRC python
  import string
  import h5py
  import seaborn as sns
  import pandas as pd
  import numpy as np
  import matplotlib.pyplot as plt
  sns.set(context="paper", palette="Set2", style="white", font_scale=2, rc={'figure.figsize': (14, 8.8)})
  f = h5py.File("sads.h5")
  data = {'Discharge': [], 'Simulation': [], 'River': [], 'Time': []}
  for k in f:
      n = len(f[k]['Obs'][0, :])
      data['Time'].extend(list(range(n))*2)
      data['Discharge'].extend(f[k]['Obs'][0, :])
      data['Discharge'].extend(f[k]['r'][:].mean(axis=1))
      data['Simulation'].extend(['Truth']*n)
      data['Simulation'].extend(['SADS']*n)
      data['River'].extend([k]*2*n)
  data = pd.DataFrame(data)
  g = sns.FacetGrid(data, col="River", hue="Simulation", col_wrap=3, sharex=False, sharey=False, aspect=2)
  g.map(plt.plot, "Time", "Discharge")#.add_legend(title="")
  axes = g.axes.flatten()
  letters = string.ascii_lowercase[:18]
  for i, ax in enumerate(axes):
      ax.set_title(ax.get_title().replace("River =", "{}.".format(letters[i])))
  f = None
  axes[0].set_ylabel("Discharge ($m^{3}/s$)")
  axes[3].set_ylabel("Discharge ($m^{3}/s$)")
  axes[6].set_ylabel("Discharge ($m^{3}/s$)")
  axes[9].set_ylabel("Discharge ($m^{3}/s$)")
  axes[12].set_ylabel("Discharge ($m^{3}/s$)")
  axes[15].set_ylabel("Discharge ($m^{3}/s$)")
  axes[16].legend(bbox_to_anchor=(0.8, -0.4), ncol=2, borderaxespad=0., frameon=False, fontsize=20)
  plt.savefig("sads_r.pdf", pad_inches=0)
#+END_SRC
#+name: fig:sads_r
#+caption: Hydrographs from the SADS algorithm when using hydraulic geometry relation with a generic $r$ parameter compared to true discharge for each of the 18 case study rivers.
#+begin_figure
#+attr_latex: :width \textwidth
[[file:figures/sads_r.pdf]]
#+end_figure

Despite the improvement in discharge estimation accuracy, the generic $r$ is
another approximation similar to the rectangular channel assumption and does not
exploit any of the information from the river's geomorphology or observations to
derive an improved prior probability distribution for $r$. Utilizing the
geomorphological classification framework we can introduce prior knowledge to
aid in the inference of the unobservable channel geometry. Ideally this
geomorphological information will allow the SADS algorithm to derive a PDF (via
the rejection sampling approach) for the $r$ parameter that has the correct
support and is tighter. Figure [[fig:sads_gr]] shows the comparison between true and SADS-estimated
discharge time series, with the latter using a $r$ parameter distribution
estimated from the geomorphological classification framework.

The geomorphological $r$ (Gr hereafter) configuration improves the accuracy of
the estimated discharge for 13/18 rivers while slightly decreasing it for 3
rivers. The Seine and the Wabash are
the two rivers where performance is worse across all error metrics. The Gr
estimation over-predicts the peak flows for the Seine river and overestimates the flow
volume for the Wabash despite better capturing the temporal dynamics (compared
to the generic $r$). The largest improvements in terms of efficiency were the
upstream Sacramento, the Platte, and the Tanana with increases in the NSE of
12.9, 2.3 and 26.5 respectively (corresponding values for KGE were 1.6, 0.6 and
0.7). The Gr configuration was able to much better reproduce the temporal
dynamics in both St Lawrence reaches, despite not being able to entirely
remove the bias in these cases. In other rivers where there was improvement, the Gr hydrograph
did not exhibit the same high-frequency variability that the generic $r$
configuration showed with both the upstream and downstream Mississippi reaches
being the most prominent cases of that behavior. The Ganges is an interesting case, since the rectangular
assumption led to consistent overestimation of discharge whereas both the
generic $r$ and Gr configurations overestimated the low flows but underestimated
the periods of peak flow agreeing with results from other algorithms
citep:durand2016. Overall the Gr configuration improved the error metrics
compared to both the generic $r$ and rectangular channel approximations, with
the median KGE and NSE being 0.57 and 0.66 while the RMSEs and bias
were reduced to 35%/52% (NRMSE/RRMSE) and -19% respectively.

#+BEGIN_SRC python
  import string
  import h5py
  import seaborn as sns
  import pandas as pd
  import numpy as np
  import matplotlib.pyplot as plt
  sns.set(context="paper", palette="Set2", style="white", font_scale=2, rc={'figure.figsize': (14, 8.8)})
  f = h5py.File("sads.h5")
  data = {'Discharge': [], 'Simulation': [], 'River': [], 'Time': []}
  for k in f:
      n = len(f[k]['Obs'][0, :])
      data['Time'].extend(list(range(n))*2)
      data['Discharge'].extend(f[k]['Obs'][0, :])
      data['Discharge'].extend(f[k]['Gr'][:].mean(axis=1))
      data['Simulation'].extend(['Truth']*n)
      data['Simulation'].extend(['SADS']*n)
      data['River'].extend([k]*2*n)
  data = pd.DataFrame(data)
  g = sns.FacetGrid(data, col="River", hue="Simulation", col_wrap=3, sharex=False, sharey=False, aspect=2)
  g.map(plt.plot, "Time", "Discharge")#.add_legend(title="")
  axes = g.axes.flatten()
  letters = string.ascii_lowercase[:18]
  for i, ax in enumerate(axes):
      ax.set_title(ax.get_title().replace("River =", "{}.".format(letters[i])))
  f = None
  axes[0].set_ylabel("Discharge ($m^{3}/s$)")
  axes[3].set_ylabel("Discharge ($m^{3}/s$)")
  axes[6].set_ylabel("Discharge ($m^{3}/s$)")
  axes[9].set_ylabel("Discharge ($m^{3}/s$)")
  axes[12].set_ylabel("Discharge ($m^{3}/s$)")
  axes[15].set_ylabel("Discharge ($m^{3}/s$)")
  axes[16].legend(bbox_to_anchor=(0.8, -0.4), ncol=2, borderaxespad=0., frameon=False, fontsize=20)
  plt.savefig("sads_Gr.pdf", pad_inches=0)
#+END_SRC
#+name: fig:sads_gr
#+caption: Hydrographs from the SADS algorithm when using hydraulic geometry relation with a $r$ parameter derived from a geomorphological classification compared to true discharge for each of the 18 case study rivers.
#+begin_figure
#+attr_latex: :width \textwidth
[[file:figures/sads_Gr.pdf]]
#+end_figure

** AHG constraints
We performed a fourth experiment to evaluate the impact of applying a
regularization step before the assimilation of SWOT observations. The
regularization explicitly incorporated the AHG power laws into the discharge
estimation, which essentially "tightens" and potentially shifts the prior
distribution of discharge that is being used to generate the ensemble for the
standard assimilation of the SWOT observations. We used an identical
configuration in the forward modeling with the geomorphological $r$
experiment, therefore the only difference is the pre-conditioning of the prior
discharge ensemble through the regularization with the AHG relationships. Figure
[[fig:sads_ahg]] shows hydrographs for all rivers of the true and SADS-estimated discharge with the
latter estimate incorporating the AHG regularization.

The AHG-constrained configuration (hereafter AHGc) improved the accuracy of the
discharge estimates for 13/18 rivers but degraded performance for 5 rivers. The
worse-performing rivers included the Tanana, Ganges, downstream St Lawrence, Po and the
downstream Sacramento with the latter two showing a very small decrease in
efficiencies (KGE from 0.58 to 0.57 for the Po, and 0.43 to 0.40 for the
downstream Sacramento). The Tanana shows a relatively small degradation in terms
of KGE but a larger one for the rest of the error metrics (e.g. NRMSE from 31%
to 47% and NSE from -3.54 to -9.38). The accuracy for the downstream St
Lawrence degrades similarly across all metrics except for NSE, which increased
from -7.47 to -4.87 while showing a modest increase in RMSEs. The Ganges shows a
decrease in accuracy when applying the AHG constraints, but a comparison of any
of the SADS configurations (RRMSE of 115% at best) with the performance of other SWOT-estimation
discharge algorithms (RRMSE of 52% citep:bonnema2016) suggests that either the
AHG relations are limited in braided rivers or that improvements in the SADS
algorithm are needed.

The improvements in discharge estimates in terms of RMSEs (for
the rivers that did improve) were relatively modest with a median decrease of
8.6% and 7.8% for NRMSE and RRMSE respectively. The largest improvement in terms
of RMSEs was found for the upstream St Lawrence with NRMSE and RRMSE being
reduced to 9.2% and 8.1% respectively. The Seine and the Severn also show
a large improvement with the AHG constraints attenuating the overestimated
peak flows and better capturing the low flow periods for both rivers. The NSEs
for these two rivers increase from 0.66 to 0.93, and 0.43 to 0.80 respectively.
In the cases of the two Garonne River reaches, the AHGc is able to better
capture the peak flows as well as reduce the errors for the descending limbs of
the hydrographs (particularly evident for the upstream Garonne during days
176-279). Overall, for the rivers that did improve with the AHGc the median
increase in NSE and KGE was 0.14 and 0.12 while the NRMSE, RRMSE and rBias
exhibited a median decrease of 8.3%, 6.7% and 7.9% respectively.

#+BEGIN_SRC python
  import string
  import h5py
  import seaborn as sns
  import pandas as pd
  import numpy as np
  import matplotlib.pyplot as plt
  sns.set(context="paper", palette="Set2", style="white", font_scale=2, rc={'figure.figsize': (14, 8.8)})
  f = h5py.File("sads.h5")
  data = {'Discharge': [], 'Simulation': [], 'River': [], 'Time': []}
  for k in f:
      n = len(f[k]['Obs'][0, :])
      data['Time'].extend(list(range(n))*2)
      data['Discharge'].extend(f[k]['Obs'][0, :])
      data['Discharge'].extend(f[k]['Ahg'][:].mean(axis=1))
      data['Simulation'].extend(['Truth']*n)
      data['Simulation'].extend(['SADS']*n)
      data['River'].extend([k]*2*n)
  data = pd.DataFrame(data)
  g = sns.FacetGrid(data, col="River", hue="Simulation", col_wrap=3, sharex=False, sharey=False, aspect=2)
  g.map(plt.plot, "Time", "Discharge")#.add_legend(title="")
  axes = g.axes.flatten()
  letters = string.ascii_lowercase[:18]
  for i, ax in enumerate(axes):
      ax.set_title(ax.get_title().replace("River =", "{}.".format(letters[i])))
  f = None
  axes[0].set_ylabel("Discharge ($m^{3}/s$)")
  axes[3].set_ylabel("Discharge ($m^{3}/s$)")
  axes[6].set_ylabel("Discharge ($m^{3}/s$)")
  axes[9].set_ylabel("Discharge ($m^{3}/s$)")
  axes[12].set_ylabel("Discharge ($m^{3}/s$)")
  axes[15].set_ylabel("Discharge ($m^{3}/s$)")
  axes[16].legend(bbox_to_anchor=(0.8, -0.4), ncol=2, borderaxespad=0., frameon=False, fontsize=20)
  plt.savefig("sads_ahg.pdf", pad_inches=0)
#+END_SRC
#+name: fig:sads_ahg
#+caption: Hydrographs from the SADS algorithm when using hydraulic geometry relation with a $r$ parameter derived from a geomorphological classification and applying the AHG regularization, compared to true discharge for each of the 18 case study rivers.
#+begin_figure
#+attr_latex: :width \textwidth
[[file:figures/sads_ahg.pdf]]
#+end_figure

Examining the overall performance of the different configurations it becomes
clear that the incorporation of hydraulic geometry relations, via the river
channel formulation and the AHG equations, resulted in improved discharge
estimates. Figure [[fig:metrics]] shows boxplots of the discharge error metrics from
all rivers for the different algorithm configurations: the rectangular channel
approximation (Rect), the generic $r$ parameter (r), incorporating the
geomorphological classification (Gr), and including the regularization with the
AHG constraints (AHG). The median NSE increases with the addition of constraints
and information to the estimation: -0.46 for Rect, 0.31 for r, 0.66 for Gr, and
0.77 for AHG. The performance in terms of NSE appears more consistent for Rect
than the generic $r$ with a smaller range of efficiencies despite the median
value being lower. This could be attributed to the variance of the prior $r$
distributions for each approximation. The range of $r$ values for the Rect
distribution are large and lead to practically an identical channel shape, while
the range of $r$ values in the generic distribution lead to significantly
varying channel shapes affecting the forward model predictions. The AHG
configuration has only 3 rivers with negative NSEs, compared to 12 for Rect, 6
for r and 4 for Gr.

The same pattern was observed in terms of performance for both the RMSE metrics,
with Ahgc having the smallest median errors of 28.6% (NRMSE) and 47.9% (RRMSE).
Moreover the RMSEs decrease as the incorporation of hydraulic geometry
relations is enhanced. The median values for the NRMSE (RRMSE) were 74.5%
(96.8%) for Rect, 49.4% (77.3%) for r, and 34.7% (52.4%) for Gr. Both the Gr and
AHG configurations had a smaller variance of RMSEs compared with the more
generic river channel approximations, as evidenced by the quartile ranges. The
distributions of RMSEs were relatively skewed for all configurations with some
rivers under-performing for the AHGc. Given that the flow depth (difference
between the water surface and bed elevations) is assimilated
essentially twice (one with Equation [[eq:ahg2]] and the other with the SWOT
observation), any errors in the SADS-estimated bed elevation could be the cause
of volume errors being worse for some rivers when the additional AHG constraints
are applied.

The AHGc also outperforms the other three configurations in terms of both
relative bias and KGE. The median bias shows that overall all configurations are
negatively biased, although the AHGc has the smallest value (-7.4%) while Rect
has -83.3%, r has -38.9% and Gr has a rBias of -19.5%. There are only two rivers
where SADS-estimated discharge is consistently positively biased, the Kanawha
and the upstream St Lawrence although the latter has a relatively small bias of
4.9% for the AHGc. The KGE metric generally shows that all four configurations
have reasonable performance with consistent ranges of metric values between the
generic river channel approximations. As the application of hydraulic geometry
is enhanced, KGE increases with the median values being 0.12 for Rect, 0.33 for
r, 0.57 for Gr, and 0.63 for AHG.

#+BEGIN_SRC python
import numpy as np
def nse(o, m):
    return 1 - np.sum((m-o)**2)/np.sum((o-np.mean(o))**2)
def rrmse(o, m):
    return np.sqrt(np.mean(((o-m)/o)**2))
def nrmse(o, m):
    return np.sqrt(np.mean(((o-m)/np.mean(o))**2))
def rbias(o, m):
    return np.mean((o-m)/o)
def kge(o, m):
    return 1-np.sqrt((np.corrcoef(o,m)[0,1]-1)**2+(np.std(m)/np.std(o)-1)**2+(np.mean(m)/np.mean(o)-1)**2)
sns.set(context="paper", palette="Set2", style="white", font_scale=1.5, rc={'figure.figsize': (9, 6)})
data = {'Value': [], 'Simulation': [], 'Metric': [], 'River': []}
sims = {'Rect': 'Rect', 'r': 'r', 'Gr': 'Gr', 'Ahg': 'AHG'}
metrics = {'NSE': nse, 'RRMSE': rrmse, 'NRMSE': nrmse, 'rBias': rbias, 'KGE': kge}
for m in metrics:
    for sim in ['Rect','r','Gr','Ahg']:
        data['Value'].extend([metrics[m](f[k]['Obs'][0,:],f[k][sim][:].mean(axis=1)) for k in f])
        data['River'].extend(list(f.keys()))
        data['Metric'].extend([m]*len(f.keys()))
        data['Simulation'].extend([sims[sim]]*len(f.keys()))
data = pd.DataFrame(data)
ax = sns.boxplot(x="Metric", y="Value", hue="Simulation", data=data, fliersize=0)
ax.set_ylabel("")
ax.set_xlabel("")
ax.set_ylim([-8, 3.5])
lg = ax.get_legend()
lg.set_title("")
plt.plot(ax.get_xlim(), (0,0), '--', color='grey', linewidth=0.5)
ax.set_xlim([-0.5, 4.5])
plt.savefig("sads_metrics.pdf", pad_inches=0)
#+END_SRC
#+name: fig:metrics
#+caption: Boxplot of discharge error metrics from all case studies for the different algorithm configurations, including rectangular channel (Rect), generic $r$ parameter (r), $r$ parameter derived from the geomorphological classification (Gr), and same as Gr but with the AHG regularization applied. Range of y-axis values has been cut off for display purposes.
#+begin_figure
#+attr_latex: :width \textwidth
[[file:figures/sads_metrics.pdf]]
#+end_figure

Although the geomorphological classification overall improved the discharge estimated
from the assimilation, there could be cases when a misclassification could limit
the effectiveness of the assimilation and/or the AHG constraints. The initial
impact of a misclassification would manifest in the erroneous truncation of the
prior distribution for the $r$ parameter, and would propagate in the
calculations of the GVF model leading to a potentially poor estimate of the
model-observation difference and model covariance. We tested this hypothesis by
noting that there were two rivers (Wabash and downstream St Lawrence) where the SADS algorithm was consistently
under-performing despite the increasing application of the AHG constraints.
After changing their classification and applying SADS with the AHG
configuration, we found that the best results were obtained for $r \in (0, 1]$
which suggests a "braided" river. Figure [[fig:slwab]] shows hydrographs of the true
and SADS-estimated discharge for the downstream St Lawrence and Wabash when
using the geomorphologically classified (SADS-mcr) and new $r$ (SADS-ccr). The
smaller $r$ bounds led to significantly improved discharge for both rivers, with
efficencies being 0.68 (NSE) and 0.69 (KGE) for the Wabash, and 0.79 (NSE) and
0.91 (KGE) for the upstream St Lawrence. The "misclassified" NSEs (KGEs) were
-69.7 (-5.33) for the Wabash, and -4.87 (0.01) for the downstream St Lawrence.

Despite the simplicity of the GVF model which makes it difficult to properly handle braided
rivers, they could be approximated as very wide, single channel rivers. However,
if the channel shape parameter is not commensurate with that approximation the
assimilation algorithm would be hindered due to the erroneous predictions from
the forward model. On the other hand, a reason that the $r<1$ produced better results for the downstream St Lawrence
and the Wabash could be the maximum "observed" width. The
Wabash and downstream St Lawrence have the largest maximum widths from the
rivers that were not classified as braided (11,791 and 15,673 respectively).
Since the maximum observed width is used as the bankfull width in the GVF model,
the smaller $r$ could be compensating for the potential overestimation in
channel width (even if the classification was correct).

#+BEGIN_SRC python
import h5py
import seaborn as sns
import matplotlib.pyplot as plt
f = h5py.File("sads.h5")
data = {'Discharge': [], 'River': [], 'Simulation': [], 'Time': []}
for k in ['StLawrenceDownstream', 'Wabash']:
    n = len(f[k]['Obs'][0, :])
    data['Discharge'].extend(f[k]['Obs'][0, :])
    data['Discharge'].extend(f[k]['Ahg'][:].mean(axis=1))
    data['Discharge'].extend(f[k]['Ahgc'][:].mean(axis=1))
    data['Simulation'].extend(['Truth']*n)
    data['Simulation'].extend(['SADS-mcr']*n)
    data['Simulation'].extend(['SADS-ccr']*n)
    data['Time'].extend(list(range(n))*3)
    data['River'].extend([k]*3*n)
data = pd.DataFrame(data)
sns.set(context="paper", palette="Set2", style="white", font_scale=1.5, rc={'figure.figsize': (12, 6)})
g = sns.FacetGrid(data, col="River", hue="Simulation", sharey=False, aspect=1.5)
g.map(plt.plot, "Time", "Discharge").add_legend(title="")
for ax in g.axes.flatten():
    ax.set_title(ax.get_title().replace("River = ", ""))
f = None
g.axes[0][0].set_ylabel("Discharge ($m^{3}/s$)")
g.axes[0][0].text(100, 12000, "(a)")
g.axes[0][1].text(120, 11000, "(b)")
plt.savefig("stlawrence_wabash.pdf", pad_inches=0)
#+END_SRC
#+name: fig:slwab
#+caption: Hydrographs of true and SADS-estimated discharge with AHG regularization and misclasssified (SADS-mcr) and correctly classified (SADS-ccr) $r$ parameter for the downstream St Lawrence (a) and Wabash (b) Rivers.
#+begin_figure
#+attr_latex: :width \textwidth
[[file:figures/stlawrence_wabash.pdf]]
#+end_figure

#+BEGIN_SRC python
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
data = pd.read_csv("sads_ahg.txt", delim_whitespace=True, header=None).values
cls = list(sns.color_palette('Set2'))[-1]
fig, ax = plt.subplots(2, 3)
ax = ax.flatten()
ax[0].plot(data[:,3], data[:, 9], 'o', color=cls)
ax[1].plot(data[:,4], data[:, 10], 'o', color=cls)
ax[2].plot(data[:,5], data[:, 11], 'o', color=cls)
ax[0].set_xlabel("$\hat{b}$")
ax[0].set_ylabel("$b_{D}$")
ax[1].set_xlabel("$\hat{f}$")
ax[1].set_ylabel("$f_{D}$")
ax[2].set_xlabel("$\hat{m}$")
ax[2].set_ylabel("$m_{D}$")
ax[3].plot(data[:,0], data[:, 6], 'o', color=cls)
ax[4].plot(data[:,1], data[:, 7], 'o', color=cls)
ax[5].plot(data[:,2], data[:, 8], 'o', color=cls)
ax[3].set_xlabel(r"$ \hat{\alpha} $")
ax[3].set_ylabel(r"$ \alpha_{D} $")
ax[4].set_xlabel(r"$ \hat{c} $")
ax[4].set_ylabel(r"$ c_{D} $")
ax[5].set_xlabel(r"$ \hat{k} $")
ax[5].set_ylabel(r"$ k_{D} $")
for a in ax:
    vmin = min(list(a.get_ylim()) + list(a.get_xlim()))
    vmax = max(list(a.get_ylim()) + list(a.get_xlim()))
    a.plot([vmin, vmax], [vmin, vmax], '--', color='grey', linewidth=0.5)
plt.subplots_adjust(hspace=0.4, wspace=0.5)
plt.savefig("sads_coeffs.pdf", pad_inches=0)
#+END_SRC

It is worthwhile examining whether the regularization with the AHG constraints led to estimates of
discharge that corresponded to empirical AHG coefficients convergent with their
theoretical values (given by Equations [[eq:ahg1]] - [[eq:ahg3]]). We estimated the
coefficients  via linear regression of the logarithms of the AGHc discharge and the
GVF-predicted flow depth, width and velocity. Since we used a spatially
uniform $r$ channel shape parameter, i.e. the exponents in the AHG equations are
identical along each river, we only calculated and compared the coefficients at the
downstream cross sections. Figure [[fig:coeffs]] shows the estimated downstream AHG
exponents ($b$, $f$ and $m$) and coefficients ($\alpha$, $c$ and $k$) compared
with their theoretical values. The width AHG relationship appears to agree best
in terms of the theoretical values of the exponent $b$ and coefficient $\alpha$
with an $R^{2}$ of 0.98 and 0.99 respectively. This agreement is reasonable
given that width is directly observed and indirectly used in the assimilation
via the forward model predictions. In contrast, the agreement is rather poor for
the flow depth exponent $f$ and coefficient $c$, with a $R^{2}$ of 0.14 and 0.18
respectively. The bed elevation values that are estimated from SADS are being
used both in the regularization and the assimilation steps, and any errors in
that estimation could lead to divergent results in the $Q-y$ regression from
the theoretical values. Furthermore, the regularization that was applied essentially amounts to the modification of the discharge prior ensemble to weakly impose the AHG constraints citep:sugiura2013 and therefore the
assimilation could have resulted in a discharge solution that is not consistent
with the preceding applied AHG constraint. The velocity exponent $m$ and
coefficient $k$ appear to have a modest agreement with their theoretical values,
with a $R^{2}$ of 0.51 and 0.56 respectively, which is somewhat expected since
velocity depends on both flow depth and width (via the Manning's equation).

#+name: fig:coeffs
#+caption: Estimated hydraulic geometry exponents ($b$, $f$, $m$ for width, depth, and velocity respectively) and coefficents ($\alpha$, $c$, $k$ for width, depth, and velocity respectively) compared with theoretical values (Equations [[eq:ahg1]] - [[eq:ahg3]]). Subscript $D$ indicates theoretical values.
#+begin_figure
#+attr_latex: :width \textwidth
[[file:figures/sads_coeffs.pdf]]
#+end_figure

* Discussion
In order to contextualize the development and implementation of the SADS
algorithm, we need to restate the discussion found in citet:durand2016, which
compared the performance of five discharge algorithms. Although there was at
least one algorithm that estimated discharge within 35% RRMSE for each of the
rivers that were also utilized in our study, none of the algorithms performed
consistently across all rivers. Our goal here was not to assess whether SADS
outperformed other SWOT discharge estimation algorithms, but rather to examine
the impact of hydraulic geometry constraints on the assimilation of SWOT
observations. Nonetheless, we did evaluate the performance of the SADS
algorithm using identical assumptions as the citet:durand2016 study, i.e. the only
input apart from the SWOT observations was a model-derived mean annual flow used
as a prior estimate of mean flow. The configuration of the SADS algorithm that
included the entirety of the hydraulic geometry constraints led to a positive
NSE for all rivers except for the Tanana River, so it is worth examining
potential reasons for the consistent performance across varying river
environments and flow regimes. One hypothesis involves the fact that the different components of the SADS algorithm, as
implemented here, have an indirect correspondence with each of the other SWOT
discharge algorithms. The data-driven derivation of the prior
probability distributions was able to derive informative priors from just the SWOT observations and a mean annual
flow. The rejection sampling used to derive the priors can be considered similar to the Markov Chain Monte
Carlo approach used by the MetroMan algorithm. Moreover, the data assimilation
scheme at the core of SADS is similar in principle with other SWOT discharge
algorithms such as GaMo. Finally, the hydraulic geometry constraints that are an
essential part of our study are linked with approaches that algorithms such as
BAM and MFG are based on. citet:durand2016 suggested that the addition of
a-priori information should improve the effectiveness of each algorithm, while a
hybrid or synergistic approach could lead to a SWOT discharge product viable for
rivers globally. Both of these assertions appear to be supported by the results of the
implementation and evaluation of the SADS algorithm.

* Conclusions
The upcoming SWOT satellite mission will offer a unique opportunity to map river
discharge at an unprecedented spatial resolution globally from its observations
of water surface elevation, width and slope. Since river discharge will be
indirectly observed from SWOT, a number of algorithms have been developed with
varying complexity to estimate discharge from SWOT observables. During the implementation and evaluation of these
algorithms some issues arose that motivated the approach presented in this
study. The issues that in some cases made discharge estimation problematic
revolved around the requirement of accurate prior information, the
feasibility of applying the algorithm globally, and most importantly the
equifinality of the hydraulic parameters. 

Data assimilation has a long history of successfully been applied with SWOT (or
SWOT-like) observations, and therefore was used as the base to build a new
algorithm. SADS was developed by combining a physically-based and data-driven
approach to estimate the prior probability distributions needed for the
assimilation of the SWOT observations. The data-driven components of SADS were
based on a rejection sampling approach as well as a geomorphological
classification framework. In addition, the at-a-station hydraulic
geometry relations that have been confirmed both theoretically and empirically citep:gleason2015
were incorporated into the algorithm to ameliorate the parameter equifinality
issue by further constraining the estimation problem. The comprehensive dataset
first used in citet:durand2016 allowed for evaluating the integration of
hydraulic geometry relations with data assimilation of SWOT observations. A set
of four experiments, i.e. algorithm configurations, were assessed where each
progressively added constraints based on hydraulic geometry. The configuration
that explicitly incorporated the AHG power law equations and the
geomorphological class information outperformed the other three configurations
(rectangular channel, empirically-derived but generic channel, and channel
shape based on the geomorphological classification). Discharge estimation
accuracy was quantified with a suite of metrics including NSE, KGE, RRMSE, NRMSE
and rBias. The median NSEs for the different configurations were -0.46, 0.31,
0.66 and 0.77, while the NRMSE was 74.5%, 49.4%, 34.7% and 28.6% respectively
with results being similar in terms of the other three metrics. When taking into
account the misclassification of two rivers from the 18 case studies, the SADS
configurations with the full set of AHG constrains had only positive NSEs with
the sole exception being the braided Tanana river. The applicability of the simple GVF model for braided rivers is limited and
could be the reason why SADS did not perform as well in the case of the Tanana
river, suggesting that some modifications are needed to improve the forward
modeling. The channel formulation with the $r$ shape parameter allows for flexible
representation in the forward model and facilitates the incorporation of
hydraulic geometry constraints and although it can be estimated with minimal
prior information the algorithm's accuracy could be increased if data are
available to calibrate the different model parameters.

The results from the development of SADS and its evaluation against a
comprehensive albeit synthetic dataset were encouraging but a number of limitations
need to be addressed through future work. Recent work has utilized airborne
measurements from AirSWOT, a SWOT-like airborne Ka-band radar, to estimate
hydraulic variables citep:altenau2017,tuozzolo2019. These datasets could potentially be used to test and
evaluate SADS in order to complement the analysis presented here. Furthermore,
an extension to the classic AHG theory is the At-many-stations hydraulic
geometry (AMHG) showed that the empirical parameters of AHG (valid at
cross-sections) are functionally related along a river citep:gleason2015a. The
incorporation of AMHG could lead to further constraining the prior and posterior
distributions of river discharge as it is reconcilable with AHG citep:brinkerhoff2019, making it a
promising approach for an algorithm such as SADS. Finally, the implementation of the SADS algorithm presented here is not applicable to an
entire river network, since it does not take into account any flows at junctions
or from lateral tributaries. Given that the objective of this study was the
evaluation of hydraulic geometry constraints on the assimilation of SWOT
satellite observations, the aspects of an operational implementation of the
algorithm were considered to be beyond the scope of this study. Nonetheless,
there are a number of approaches that could be used to enable the application of
SADS over river networks [[citep:zhu2011][e.g.::]].


* Acknowledgments                                                    :ignore:
\acknowledgments
 Funding for this work was provided by the NASA SWOT Science Team and Terrestrial Hydrology programs. The authors would like to thank Renato Frasson and Michael Durand for providing the dataset used in this study. Data and software code used to generate the results presented herein can be found at https://github.com/kandread/Sads.jl.

* References                                                         :ignore:
bibliography:references.bib



